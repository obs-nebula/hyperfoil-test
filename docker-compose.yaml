# Thanks to https://github.com/scholzj/strimzi-compose-up for the Kafka part.
version: '3'

networks:
  default:
    name: hyperfoil-test
    driver: bridge

services:
  zookeeper:
    image: quay.io/strimzi/kafka:0.32.0-kafka-3.3.1
    command: [
        "sh", "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
      ]
    ports:
    - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs

  kafka:
    image: quay.io/strimzi/kafka:0.32.0-kafka-3.2.1
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
    - zookeeper
    ports:
    - "9092:9092"
    hostname: kafka
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  postgres:
    hostname: postgres
    restart: always
    image: centos/postgresql-10-centos7
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment: 
      POSTGRESQL_USER: otel
      POSTGRESQL_PASSWORD: otel
      POSTGRESQL_DATABASE: msgs
    ports:
      - "5432:5432"

  random-data-service:
    build:
      context: ./random-data-service
      dockerfile: Dockerfile
    hostname: rds
    ports:
      - "8080:8080"

  data-changer-service:
    build:
      context: ./data-changer-service
      dockerfile: Dockerfile
    hostname: dcs
    ports:
      - "8081:8081"

  data-filter-service:
    build:
      context: ./data-filter-service
      dockerfile: Dockerfile
    hostname: dfs
    ports:
      - "8082:8082"

  display-data-service:
    build:
      context: ./display-data-service
      dockerfile: Dockerfile
    hostname: dds
    ports:
      - "8083:8083"